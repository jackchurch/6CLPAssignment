//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ABC_Ed_Services.EnrollServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StudentVO", Namespace="http://schemas.datacontract.org/2004/07/ABCEnrollmentServiceWCF.Model")]
    [System.SerializableAttribute()]
    public partial class StudentVO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateEnrolledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StduentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StudentIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateEnrolled {
            get {
                return this.DateEnrolledField;
            }
            set {
                if ((this.DateEnrolledField.Equals(value) != true)) {
                    this.DateEnrolledField = value;
                    this.RaisePropertyChanged("DateEnrolled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StduentName {
            get {
                return this.StduentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StduentNameField, value) != true)) {
                    this.StduentNameField = value;
                    this.RaisePropertyChanged("StduentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StudentID {
            get {
                return this.StudentIDField;
            }
            set {
                if ((object.ReferenceEquals(this.StudentIDField, value) != true)) {
                    this.StudentIDField = value;
                    this.RaisePropertyChanged("StudentID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CourseVO", Namespace="http://schemas.datacontract.org/2004/07/ABCEnrollmentServiceWCF.Model")]
    [System.SerializableAttribute()]
    public partial class CourseVO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> CostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CourseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CourseNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Cost {
            get {
                return this.CostField;
            }
            set {
                if ((this.CostField.Equals(value) != true)) {
                    this.CostField = value;
                    this.RaisePropertyChanged("Cost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CourseID {
            get {
                return this.CourseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CourseIDField, value) != true)) {
                    this.CourseIDField = value;
                    this.RaisePropertyChanged("CourseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CourseName {
            get {
                return this.CourseNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CourseNameField, value) != true)) {
                    this.CourseNameField = value;
                    this.RaisePropertyChanged("CourseName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EnrollServiceReference.IEnrollService")]
    public interface IEnrollService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrollService/InsertStudent", ReplyAction="http://tempuri.org/IEnrollService/InsertStudentResponse")]
        int InsertStudent(string id, string name, System.DateTime dateEnrolled);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrollService/InsertStudent", ReplyAction="http://tempuri.org/IEnrollService/InsertStudentResponse")]
        System.Threading.Tasks.Task<int> InsertStudentAsync(string id, string name, System.DateTime dateEnrolled);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrollService/InsertCourse", ReplyAction="http://tempuri.org/IEnrollService/InsertCourseResponse")]
        int InsertCourse(string id, string name, decimal cost);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrollService/InsertCourse", ReplyAction="http://tempuri.org/IEnrollService/InsertCourseResponse")]
        System.Threading.Tasks.Task<int> InsertCourseAsync(string id, string name, decimal cost);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrollService/ViewStudents", ReplyAction="http://tempuri.org/IEnrollService/ViewStudentsResponse")]
        System.Collections.Generic.List<ABC_Ed_Services.EnrollServiceReference.StudentVO> ViewStudents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrollService/ViewStudents", ReplyAction="http://tempuri.org/IEnrollService/ViewStudentsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ABC_Ed_Services.EnrollServiceReference.StudentVO>> ViewStudentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrollService/ViewCourses", ReplyAction="http://tempuri.org/IEnrollService/ViewCoursesResponse")]
        System.Collections.Generic.List<ABC_Ed_Services.EnrollServiceReference.CourseVO> ViewCourses();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrollService/ViewCourses", ReplyAction="http://tempuri.org/IEnrollService/ViewCoursesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ABC_Ed_Services.EnrollServiceReference.CourseVO>> ViewCoursesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrollService/Enroll", ReplyAction="http://tempuri.org/IEnrollService/EnrollResponse")]
        int Enroll(string courseID, string studentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrollService/Enroll", ReplyAction="http://tempuri.org/IEnrollService/EnrollResponse")]
        System.Threading.Tasks.Task<int> EnrollAsync(string courseID, string studentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrollService/GetEnrollmentsForStudent", ReplyAction="http://tempuri.org/IEnrollService/GetEnrollmentsForStudentResponse")]
        System.Collections.Generic.List<ABC_Ed_Services.EnrollServiceReference.CourseVO> GetEnrollmentsForStudent(string studentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrollService/GetEnrollmentsForStudent", ReplyAction="http://tempuri.org/IEnrollService/GetEnrollmentsForStudentResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ABC_Ed_Services.EnrollServiceReference.CourseVO>> GetEnrollmentsForStudentAsync(string studentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrollService/GetStudentsEnrolledInCourse", ReplyAction="http://tempuri.org/IEnrollService/GetStudentsEnrolledInCourseResponse")]
        System.Collections.Generic.List<ABC_Ed_Services.EnrollServiceReference.StudentVO> GetStudentsEnrolledInCourse(string courseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrollService/GetStudentsEnrolledInCourse", ReplyAction="http://tempuri.org/IEnrollService/GetStudentsEnrolledInCourseResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ABC_Ed_Services.EnrollServiceReference.StudentVO>> GetStudentsEnrolledInCourseAsync(string courseID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEnrollServiceChannel : ABC_Ed_Services.EnrollServiceReference.IEnrollService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EnrollServiceClient : System.ServiceModel.ClientBase<ABC_Ed_Services.EnrollServiceReference.IEnrollService>, ABC_Ed_Services.EnrollServiceReference.IEnrollService {
        
        public EnrollServiceClient() {
        }
        
        public EnrollServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EnrollServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EnrollServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EnrollServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int InsertStudent(string id, string name, System.DateTime dateEnrolled) {
            return base.Channel.InsertStudent(id, name, dateEnrolled);
        }
        
        public System.Threading.Tasks.Task<int> InsertStudentAsync(string id, string name, System.DateTime dateEnrolled) {
            return base.Channel.InsertStudentAsync(id, name, dateEnrolled);
        }
        
        public int InsertCourse(string id, string name, decimal cost) {
            return base.Channel.InsertCourse(id, name, cost);
        }
        
        public System.Threading.Tasks.Task<int> InsertCourseAsync(string id, string name, decimal cost) {
            return base.Channel.InsertCourseAsync(id, name, cost);
        }
        
        public System.Collections.Generic.List<ABC_Ed_Services.EnrollServiceReference.StudentVO> ViewStudents() {
            return base.Channel.ViewStudents();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ABC_Ed_Services.EnrollServiceReference.StudentVO>> ViewStudentsAsync() {
            return base.Channel.ViewStudentsAsync();
        }
        
        public System.Collections.Generic.List<ABC_Ed_Services.EnrollServiceReference.CourseVO> ViewCourses() {
            return base.Channel.ViewCourses();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ABC_Ed_Services.EnrollServiceReference.CourseVO>> ViewCoursesAsync() {
            return base.Channel.ViewCoursesAsync();
        }
        
        public int Enroll(string courseID, string studentID) {
            return base.Channel.Enroll(courseID, studentID);
        }
        
        public System.Threading.Tasks.Task<int> EnrollAsync(string courseID, string studentID) {
            return base.Channel.EnrollAsync(courseID, studentID);
        }
        
        public System.Collections.Generic.List<ABC_Ed_Services.EnrollServiceReference.CourseVO> GetEnrollmentsForStudent(string studentID) {
            return base.Channel.GetEnrollmentsForStudent(studentID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ABC_Ed_Services.EnrollServiceReference.CourseVO>> GetEnrollmentsForStudentAsync(string studentID) {
            return base.Channel.GetEnrollmentsForStudentAsync(studentID);
        }
        
        public System.Collections.Generic.List<ABC_Ed_Services.EnrollServiceReference.StudentVO> GetStudentsEnrolledInCourse(string courseID) {
            return base.Channel.GetStudentsEnrolledInCourse(courseID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ABC_Ed_Services.EnrollServiceReference.StudentVO>> GetStudentsEnrolledInCourseAsync(string courseID) {
            return base.Channel.GetStudentsEnrolledInCourseAsync(courseID);
        }
    }
}
