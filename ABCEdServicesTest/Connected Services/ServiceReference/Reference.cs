//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ABCEdServicesTest.ServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IEnrollService")]
    public interface IEnrollService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrollService/InsertStudent", ReplyAction="http://tempuri.org/IEnrollService/InsertStudentResponse")]
        int InsertStudent(string id, string name, System.DateTime dateEnrolled);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrollService/InsertStudent", ReplyAction="http://tempuri.org/IEnrollService/InsertStudentResponse")]
        System.Threading.Tasks.Task<int> InsertStudentAsync(string id, string name, System.DateTime dateEnrolled);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrollService/InsertCourse", ReplyAction="http://tempuri.org/IEnrollService/InsertCourseResponse")]
        int InsertCourse(string id, string name, decimal cost);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrollService/InsertCourse", ReplyAction="http://tempuri.org/IEnrollService/InsertCourseResponse")]
        System.Threading.Tasks.Task<int> InsertCourseAsync(string id, string name, decimal cost);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrollService/ViewStudents", ReplyAction="http://tempuri.org/IEnrollService/ViewStudentsResponse")]
        ABC_Ed_Services.EnrollServiceReference.StudentVO[] ViewStudents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrollService/ViewStudents", ReplyAction="http://tempuri.org/IEnrollService/ViewStudentsResponse")]
        System.Threading.Tasks.Task<ABC_Ed_Services.EnrollServiceReference.StudentVO[]> ViewStudentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrollService/ViewCourses", ReplyAction="http://tempuri.org/IEnrollService/ViewCoursesResponse")]
        ABC_Ed_Services.EnrollServiceReference.CourseVO[] ViewCourses();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrollService/ViewCourses", ReplyAction="http://tempuri.org/IEnrollService/ViewCoursesResponse")]
        System.Threading.Tasks.Task<ABC_Ed_Services.EnrollServiceReference.CourseVO[]> ViewCoursesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrollService/Enroll", ReplyAction="http://tempuri.org/IEnrollService/EnrollResponse")]
        int Enroll(string courseID, string studentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrollService/Enroll", ReplyAction="http://tempuri.org/IEnrollService/EnrollResponse")]
        System.Threading.Tasks.Task<int> EnrollAsync(string courseID, string studentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrollService/GetEnrollmentsForStudent", ReplyAction="http://tempuri.org/IEnrollService/GetEnrollmentsForStudentResponse")]
        ABC_Ed_Services.EnrollServiceReference.CourseVO[] GetEnrollmentsForStudent(string studentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrollService/GetEnrollmentsForStudent", ReplyAction="http://tempuri.org/IEnrollService/GetEnrollmentsForStudentResponse")]
        System.Threading.Tasks.Task<ABC_Ed_Services.EnrollServiceReference.CourseVO[]> GetEnrollmentsForStudentAsync(string studentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrollService/GetStudentsEnrolledInCourse", ReplyAction="http://tempuri.org/IEnrollService/GetStudentsEnrolledInCourseResponse")]
        ABC_Ed_Services.EnrollServiceReference.StudentVO[] GetStudentsEnrolledInCourse(string courseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrollService/GetStudentsEnrolledInCourse", ReplyAction="http://tempuri.org/IEnrollService/GetStudentsEnrolledInCourseResponse")]
        System.Threading.Tasks.Task<ABC_Ed_Services.EnrollServiceReference.StudentVO[]> GetStudentsEnrolledInCourseAsync(string courseID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEnrollServiceChannel : ABCEdServicesTest.ServiceReference.IEnrollService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EnrollServiceClient : System.ServiceModel.ClientBase<ABCEdServicesTest.ServiceReference.IEnrollService>, ABCEdServicesTest.ServiceReference.IEnrollService {
        
        public EnrollServiceClient() {
        }
        
        public EnrollServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EnrollServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EnrollServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EnrollServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int InsertStudent(string id, string name, System.DateTime dateEnrolled) {
            return base.Channel.InsertStudent(id, name, dateEnrolled);
        }
        
        public System.Threading.Tasks.Task<int> InsertStudentAsync(string id, string name, System.DateTime dateEnrolled) {
            return base.Channel.InsertStudentAsync(id, name, dateEnrolled);
        }
        
        public int InsertCourse(string id, string name, decimal cost) {
            return base.Channel.InsertCourse(id, name, cost);
        }
        
        public System.Threading.Tasks.Task<int> InsertCourseAsync(string id, string name, decimal cost) {
            return base.Channel.InsertCourseAsync(id, name, cost);
        }
        
        public ABC_Ed_Services.EnrollServiceReference.StudentVO[] ViewStudents() {
            return base.Channel.ViewStudents();
        }
        
        public System.Threading.Tasks.Task<ABC_Ed_Services.EnrollServiceReference.StudentVO[]> ViewStudentsAsync() {
            return base.Channel.ViewStudentsAsync();
        }
        
        public ABC_Ed_Services.EnrollServiceReference.CourseVO[] ViewCourses() {
            return base.Channel.ViewCourses();
        }
        
        public System.Threading.Tasks.Task<ABC_Ed_Services.EnrollServiceReference.CourseVO[]> ViewCoursesAsync() {
            return base.Channel.ViewCoursesAsync();
        }
        
        public int Enroll(string courseID, string studentID) {
            return base.Channel.Enroll(courseID, studentID);
        }
        
        public System.Threading.Tasks.Task<int> EnrollAsync(string courseID, string studentID) {
            return base.Channel.EnrollAsync(courseID, studentID);
        }
        
        public ABC_Ed_Services.EnrollServiceReference.CourseVO[] GetEnrollmentsForStudent(string studentID) {
            return base.Channel.GetEnrollmentsForStudent(studentID);
        }
        
        public System.Threading.Tasks.Task<ABC_Ed_Services.EnrollServiceReference.CourseVO[]> GetEnrollmentsForStudentAsync(string studentID) {
            return base.Channel.GetEnrollmentsForStudentAsync(studentID);
        }
        
        public ABC_Ed_Services.EnrollServiceReference.StudentVO[] GetStudentsEnrolledInCourse(string courseID) {
            return base.Channel.GetStudentsEnrolledInCourse(courseID);
        }
        
        public System.Threading.Tasks.Task<ABC_Ed_Services.EnrollServiceReference.StudentVO[]> GetStudentsEnrolledInCourseAsync(string courseID) {
            return base.Channel.GetStudentsEnrolledInCourseAsync(courseID);
        }
    }
}
